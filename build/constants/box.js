"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BLOCKING_DELIVERY_SENDER_STATES = exports.BLOCKING_DELIVERY_RECIPIENT_STATES = exports.LOW_BATTERY_THRESHOLD_CENT = exports.BOX_OPERATIONS = exports.BOX_STATES = void 0;
const delivery_1 = require("./delivery");
var BOX_STATES;
(function (BOX_STATES) {
    BOX_STATES["IDLE"] = "IDLE";
    BOX_STATES["OFFLINE"] = "OFFLINE";
    BOX_STATES["BLOCKED_BY_DELIVERY"] = "BLOCKED_BY_DELIVERY";
    BOX_STATES["OUT_OF_PARTITIONS"] = "OUT_OF_PARTITIONS";
})(BOX_STATES = exports.BOX_STATES || (exports.BOX_STATES = {}));
var BOX_OPERATIONS;
(function (BOX_OPERATIONS) {
    BOX_OPERATIONS["BLOCK_FOR_DELIVERY"] = "BLOCK_FOR_DELIVERY";
})(BOX_OPERATIONS = exports.BOX_OPERATIONS || (exports.BOX_OPERATIONS = {}));
exports.LOW_BATTERY_THRESHOLD_CENT = 5;
exports.BLOCKING_DELIVERY_RECIPIENT_STATES = [
    delivery_1.STATE_NAMES.PACKAGE_IN_SENDER_BOX,
    delivery_1.STATE_NAMES.PACKAGE_WAITING_FOR_DELIVERY,
    delivery_1.STATE_NAMES.DELIVERY_ACCEPTED_BY_TRANSPORT_COMPANY,
    delivery_1.STATE_NAMES.SENDER_BOX_OPENED_BY_TRANSPORT_COMPANY,
    delivery_1.STATE_NAMES.PACKAGE_TAKEOVER_BY_TRANSPORT_COMPANY,
    delivery_1.STATE_NAMES.RECIPIENT_BOX_OPENED_BY_TRANSPORT_COMPANY,
    delivery_1.STATE_NAMES.PACKAGE_IN_RECIPIENT_BOX,
    delivery_1.STATE_NAMES.RECIPIENT_BOX_OPENED_BY_RECIPIENT,
];
exports.BLOCKING_DELIVERY_SENDER_STATES = [
    delivery_1.STATE_NAMES.READY_FOR_BOX,
    delivery_1.STATE_NAMES.PACKAGE_IN_SENDER_BOX,
    delivery_1.STATE_NAMES.PACKAGE_WAITING_FOR_DELIVERY,
    delivery_1.STATE_NAMES.DELIVERY_ACCEPTED_BY_TRANSPORT_COMPANY,
    delivery_1.STATE_NAMES.SENDER_BOX_OPENED_BY_TRANSPORT_COMPANY,
    delivery_1.STATE_NAMES.PACKAGE_TAKEOVER_BY_TRANSPORT_COMPANY,
];
