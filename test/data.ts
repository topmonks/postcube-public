
import {
    RES_OK,
} from '../lib/constants/bluetooth'

export const expectedHashMap = {
    alpha: {
        inputHex: '586852fe',
        inputNumberArray: [ 0x58, 0x68, 0x52, 0xfe ],
        outputHex: 'e9c218faa3e3ec1080bdd66f48ee8ead149739a3ae56e9f210acdad338234d47',
        outputNumberArray: [ 0xe9, 0xc2, 0x18, 0xfa, 0xa3, 0xe3, 0xec, 0x10, 0x80, 0xbd, 0xd6, 0x6f, 0x48, 0xee, 0x8e, 0xad, 0x14, 0x97, 0x39, 0xa3, 0xae, 0x56, 0xe9, 0xf2, 0x10, 0xac, 0xda, 0xd3, 0x38, 0x23, 0x4d, 0x47 ],
    },
    beta: {
        inputHex: '646576',
        inputNumberArray: [ 0x64, 0x65, 0x76 ],
        outputHex: 'ef260e9aa3c673af240d17a2660480361a8e081d1ffeca2a5ed0e3219fc18567',
        outputNumberArray: [ 0xef, 0x26, 0x0e, 0x9a, 0xa3, 0xc6, 0x73, 0xaf, 0x24, 0x0d, 0x17, 0xa2, 0x66, 0x04, 0x80, 0x36, 0x1a, 0x8e, 0x08, 0x1d, 0x1f, 0xfe, 0xca, 0x2a, 0x5e, 0xd0, 0xe3, 0x21, 0x9f, 0xc1, 0x85, 0x67 ],
    },
}

export const expectedEncryptionKeysMap = {
    alpha: {
        commandId: 73647838,
        privateKey: new Uint8Array([ 237, 166, 111, 229, 26, 27, 135, 67, 115, 35, 144, 249, 57, 153, 139, 133, 103, 210, 154, 50, 33, 24, 218, 108, 54, 253, 124, 45, 73, 163, 116, 70 ]),
        publicKey: new Uint8Array([ 92, 154, 124, 62, 45, 24, 21, 77, 118, 121, 77, 7, 176, 214, 146, 130, 98, 80, 49, 79, 92, 133, 165, 23, 179, 207, 93, 65, 250, 121, 150, 41, 239, 87, 45, 9, 15, 169, 116, 105, 103, 118, 13, 93, 53, 17, 74, 148, 214, 156, 29, 204, 3, 69, 58, 110, 225, 30, 37, 123, 65, 141, 74, 237 ]),
        encryptionKey: new Uint8Array([ 48, 237, 211, 7, 185, 51, 208, 159, 230, 46, 153, 94, 39, 108, 244, 84, 153, 16, 133, 103, 181, 172, 104, 91, 202, 3, 45, 146, 186, 77, 54, 246 ]),
    },
}

export const expectedEncryptionDataMap = {
    alpha: {
        ...expectedEncryptionKeysMap.alpha,
        boxId: 'devkit',
        secretCode: [ 88, 104, 82, 254 ],
        decryptedData: new Uint8Array([ 0x48, 0x69, 0x20, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x21, 0x21 ]),
        encryptedData: Buffer.from([ 0xae, 0x44, 0xba, 0x29, 0x07, 0x36, 0x84, 0x21, 0x2f, 0xb8 ]),
        authTag: Buffer.from([ 0x7e, 0x96, 0xe7, 0x60, 0xe1, 0x28, 0x46, 0x53, 0xed, 0xca, 0xbf, 0x9f, 0x0d, 0x6c, 0x5c, 0x40 ]),
    },
}

export const expectedEncodedCommandsMap = {
    alpha: {
        commandId: 2170742891,
        expireAt: 2635728,
        boxId: 'devkit',
        secretCode: [ 88, 104, 82, 254 ],
        command: {
            setKey: {
                keyIndex: 2,
                publicKey: new Uint8Array([ 92, 154, 124, 62, 45, 24, 21, 77, 118, 121, 77, 7, 176, 214, 146, 130, 98, 80, 49, 79, 92, 133, 165, 23, 179, 207, 93, 65, 250, 121, 150, 41, 239, 87, 45, 9, 15, 169, 116, 105, 103, 118, 13, 93, 53, 17, 74, 148, 214, 156, 29, 204, 3, 69, 58, 110, 225, 30, 37, 123, 65, 141, 74, 237 ]),
                expireAt: 2635728,
            },
        },
        encodedEncryptedPacket: new Uint8Array([ 24, 208, 239, 160, 1, 34, 73, 8, 2, 18, 64, 92, 154, 124, 62, 45, 24, 21, 77, 118, 121, 77, 7, 176, 214, 146, 130, 98, 80, 49, 79, 92, 133, 165, 23, 179, 207, 93, 65, 250, 121, 150, 41, 239, 87, 45, 9, 15, 169, 116, 105, 103, 118, 13, 93, 53, 17, 74, 148, 214, 156, 29, 204, 3, 69, 58, 110, 225, 30, 37, 123, 65, 141, 74, 237, 24, 208, 239, 160, 1 ]),
        encodedPacket: new Uint8Array([ 24, 208, 239, 160, 1, 34, 73, 8, 2, 18, 64, 92, 154, 124, 62, 45, 24, 21, 77, 118, 121, 77, 7, 176, 214, 146, 130, 98, 80, 49, 79, 92, 133, 165, 23, 179, 207, 93, 65, 250, 121, 150, 41, 239, 87, 45, 9, 15, 169, 116, 105, 103, 118, 13, 93, 53, 17, 74, 148, 214, 156, 29, 204, 3, 69, 58, 110, 225, 30, 37, 123, 65, 141, 74, 237, 24, 208, 239, 160, 1 ]),
    },
    beta: {
        commandId: 4294967295,
        expireAt: 47634727,
        boxId: 'devkit',
        secretCode: [ 88, 104, 82, 254 ],
        privateKey: new Uint8Array([ 237, 166, 111, 229, 26, 27, 135, 67, 115, 35, 144, 249, 57, 153, 139, 133, 103, 210, 154, 50, 33, 24, 218, 108, 54, 253, 124, 45, 73, 163, 116, 70 ]),
        publicKey: new Uint8Array([ 92, 154, 124, 62, 45, 24, 21, 77, 118, 121, 77, 7, 176, 214, 146, 130, 98, 80, 49, 79, 92, 133, 165, 23, 179, 207, 93, 65, 250, 121, 150, 41, 239, 87, 45, 9, 15, 169, 116, 105, 103, 118, 13, 93, 53, 17, 74, 148, 214, 156, 29, 204, 3, 69, 58, 110, 225, 30, 37, 123, 65, 141, 74, 237 ]),
        keyIndex: 1,
        command: {
            unlock: {
                lockId: 3,
            },
        },
        encodedEncryptedPacket: new Uint8Array([ 8, 255, 255, 255, 255, 15, 16, 1, 26, 9, 178, 158, 165, 69, 236, 138, 121, 170, 234 ]),
        encodedPacket: new Uint8Array([ 178, 158, 165, 69, 236, 138, 121, 170, 234 ]),
    },
    gamma: {
        commandId: 3984784065,
        expireAt: 3627364,
        boxId: 'devkit',
        secretCode: [ 88, 104, 82, 254 ],
        privateKey: new Uint8Array([ 237, 166, 111, 229, 26, 27, 135, 67, 115, 35, 144, 249, 57, 153, 139, 133, 103, 210, 154, 50, 33, 24, 218, 108, 54, 253, 124, 45, 73, 163, 116, 70 ]),
        publicKey: new Uint8Array([ 92, 154, 124, 62, 45, 24, 21, 77, 118, 121, 77, 7, 176, 214, 146, 130, 98, 80, 49, 79, 92, 133, 165, 23, 179, 207, 93, 65, 250, 121, 150, 41, 239, 87, 45, 9, 15, 169, 116, 105, 103, 118, 13, 93, 53, 17, 74, 148, 214, 156, 29, 204, 3, 69, 58, 110, 225, 30, 37, 123, 65, 141, 74, 237 ]),
        keyIndex: 1,
        command: {
            nuke: {},
        },
        encodedEncryptedPacket: new Uint8Array([ 8, 193, 245, 139, 236, 14, 16, 1, 26, 7, 77, 41, 95, 39, 222, 67, 72 ]),
        encodedPacket: new Uint8Array([ 77, 41, 95, 39, 222, 67, 72 ]),
    },
    delta: {
        commandId: 1764763847,
        expireAt: 282726,
        boxId: 'devkit',
        secretCode: [ 88, 104, 82, 254 ],
        privateKey: new Uint8Array([ 237, 166, 111, 229, 26, 27, 135, 67, 115, 35, 144, 249, 57, 153, 139, 133, 103, 210, 154, 50, 33, 24, 218, 108, 54, 253, 124, 45, 73, 163, 116, 70 ]),
        publicKey: new Uint8Array([ 92, 154, 124, 62, 45, 24, 21, 77, 118, 121, 77, 7, 176, 214, 146, 130, 98, 80, 49, 79, 92, 133, 165, 23, 179, 207, 93, 65, 250, 121, 150, 41, 239, 87, 45, 9, 15, 169, 116, 105, 103, 118, 13, 93, 53, 17, 74, 148, 214, 156, 29, 204, 3, 69, 58, 110, 225, 30, 37, 123, 65, 141, 74, 237 ]),
        keyIndex: 1,
        command: {
            protect: {},
        },
        encodedEncryptedPacket: new Uint8Array([ 8, 199, 209, 192, 201, 6, 16, 1, 26, 6, 236, 196, 139, 228, 37, 190 ]),
        encodedPacket: new Uint8Array([ 236, 196, 139, 228, 37, 190 ]),
    },
}

export const expectedEncodedResultsMap = {
    alpha: {
        commandId: 435763,
        value: RES_OK,
        errorCode: 0,
        encodedResult: [ 8, 179, 204, 26, 16, 1, 24, 0 ],
    },
}

export const expectedEncodedPacketsMap = {
    alpha: {
        packet: {
            expireAt: 5467282,
            setKey: {
                keyIndex: 2,
                publicKey: new Uint8Array([ 92, 154, 124, 62, 45, 24, 21, 77, 118, 121, 77, 7, 176, 214, 146, 130, 98, 80, 49, 79, 92, 133, 165, 23, 179, 207, 93, 65, 250, 121, 150, 41, 239, 87, 45, 9, 15, 169, 116, 105, 103, 118, 13, 93, 53, 17, 74, 148, 214, 156, 29, 204, 3, 69, 58, 110, 225, 30, 37, 123, 65, 141, 74, 237 ]),
                expireAt: 2635728,
            },
        },
        encodedPacket: [ 24, 146, 217, 205, 2, 34, 73, 8, 2, 18, 64, 92, 154, 124, 62, 45, 24, 21, 77, 118, 121, 77, 7, 176, 214, 146, 130, 98, 80, 49, 79, 92, 133, 165, 23, 179, 207, 93, 65, 250, 121, 150, 41, 239, 87, 45, 9, 15, 169, 116, 105, 103, 118, 13, 93, 53, 17, 74, 148, 214, 156, 29, 204, 3, 69, 58, 110, 225, 30, 37, 123, 65, 141, 74, 237, 24, 208, 239, 160, 1 ],
    },
    beta: {
        packet: {
            expireAt: 364797,
            unlock: { lockId: 8 },
        },
        encodedPacket: [ 24, 253, 161, 22, 42, 2, 8, 8 ],
    },
    gamma: {
        packet: {
            expireAt: 987238,
            timeSync: {
                timestamp: 27646832,
            },
        },
        encodedPacket: [ 24, 230, 160, 60, 50, 5, 8, 240, 182, 151, 13 ],
    },
    delta: {
        packet: {
            expireAt: 2379849,
            nuke: {},
        },
        encodedPacket: [ 24, 201, 160, 145, 1, 58, 0 ],
    },
    epsilon: {
        packet: {
            expireAt: 7246829,
            protect: {},
        },
        encodedPacket: [ 24, 237, 167, 186, 3, 66, 0 ],
    },
}
